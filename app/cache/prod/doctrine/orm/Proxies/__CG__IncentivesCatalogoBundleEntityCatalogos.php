<?php

namespace Proxies\__CG__\Incentives\CatalogoBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Catalogos extends \Incentives\CatalogoBundle\Entity\Catalogos implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setDescripcion($descripcion)
    {
        $this->__load();
        return parent::setDescripcion($descripcion);
    }

    public function getDescripcion()
    {
        $this->__load();
        return parent::getDescripcion();
    }

    public function setValorPunto($valorPunto)
    {
        $this->__load();
        return parent::setValorPunto($valorPunto);
    }

    public function getValorPunto()
    {
        $this->__load();
        return parent::getValorPunto();
    }

    public function setPuntosMaximos($puntosMaximos)
    {
        $this->__load();
        return parent::setPuntosMaximos($puntosMaximos);
    }

    public function getPuntosMaximos()
    {
        $this->__load();
        return parent::getPuntosMaximos();
    }

    public function setPrograma(\Incentives\CatalogoBundle\Entity\Programa $programa = NULL)
    {
        $this->__load();
        return parent::setPrograma($programa);
    }

    public function getPrograma()
    {
        $this->__load();
        return parent::getPrograma();
    }

    public function addProductocatalogo(\Incentives\CatalogoBundle\Entity\Productocatalogo $productocatalogo)
    {
        $this->__load();
        return parent::addProductocatalogo($productocatalogo);
    }

    public function removeProductocatalogo(\Incentives\CatalogoBundle\Entity\Productocatalogo $productocatalogo)
    {
        $this->__load();
        return parent::removeProductocatalogo($productocatalogo);
    }

    public function getProductocatalogo()
    {
        $this->__load();
        return parent::getProductocatalogo();
    }

    public function addCalificacion(\Incentives\CatalogoBundle\Entity\ProductoCalificacion $calificacion)
    {
        $this->__load();
        return parent::addCalificacion($calificacion);
    }

    public function removeCalificacion(\Incentives\CatalogoBundle\Entity\ProductoCalificacion $calificacion)
    {
        $this->__load();
        return parent::removeCalificacion($calificacion);
    }

    public function getCalificacion()
    {
        $this->__load();
        return parent::getCalificacion();
    }

    public function setEstado(\Incentives\CatalogoBundle\Entity\Estados $estado = NULL)
    {
        $this->__load();
        return parent::setEstado($estado);
    }

    public function getEstado()
    {
        $this->__load();
        return parent::getEstado();
    }

    public function setPais(\Incentives\OperacionesBundle\Entity\Pais $pais = NULL)
    {
        $this->__load();
        return parent::setPais($pais);
    }

    public function getPais()
    {
        $this->__load();
        return parent::getPais();
    }

    public function setCatalogotipo(\Incentives\CatalogoBundle\Entity\CatalogoTipo $catalogotipo = NULL)
    {
        $this->__load();
        return parent::setCatalogotipo($catalogotipo);
    }

    public function getCatalogotipo()
    {
        $this->__load();
        return parent::getCatalogotipo();
    }

    public function addIntervalo(\Incentives\CatalogoBundle\Entity\Intervalos $intervalos)
    {
        $this->__load();
        return parent::addIntervalo($intervalos);
    }

    public function removeIntervalo(\Incentives\CatalogoBundle\Entity\Intervalos $intervalos)
    {
        $this->__load();
        return parent::removeIntervalo($intervalos);
    }

    public function getIntervalos()
    {
        $this->__load();
        return parent::getIntervalos();
    }

    public function setFechaModificacion($fechaModificacion)
    {
        $this->__load();
        return parent::setFechaModificacion($fechaModificacion);
    }

    public function getFechaModificacion()
    {
        $this->__load();
        return parent::getFechaModificacion();
    }

    public function setUsuario(\Incentives\BaseBundle\Entity\Usuario $usuario = NULL)
    {
        $this->__load();
        return parent::setUsuario($usuario);
    }

    public function getUsuario()
    {
        $this->__load();
        return parent::getUsuario();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nombre', 'descripcion', 'valorPunto', 'puntosMaximos', 'fechaModificacion', 'programa', 'estado', 'catalogotipo', 'productocatalogo', 'intervalos', 'pais', 'calificacion', 'usuario');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}